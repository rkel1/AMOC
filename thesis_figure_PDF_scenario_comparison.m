% Script to plot the PDF of trends calculated in PI and RAPID-era model
% simulations, using both the CAC and the VAC methods, and displaying the
% difference between the two. Uses the .mat files generated by
% script_segment_trend_all_model.m.
%
% Richard Kelson
% September 2020

clear all

fprintf(1,'Running %s:\n%s\n',mfilename,repmat('=',1,70)) ;

% set flags
DRAFT_FLAG = 0 ; % add draft watermark to figures

%% Setup
% set filepaths
home = pwd ;
load_data_path = sprintf('%s/AMOC PDF Comparison/',home) ;
save_fig_path = sprintf('%s/Figures/Trend Analysis',home) ;
save_sup_path = sprintf('%s/Figures/Thesis Main',home) ;

if ~exist(save_fig_path,'dir')
    mkdir(save_fig_path)
end

DIFF_FLAG = 0 ; % set to 1 to also plot model-by-model differences
PI_FLAG = 0 ; % set to 1 to plot histogram for PI (should be white)


%% Load the data
% load the CMIP6 distributions files
load('cmap_emergence_time.mat')
M = length(models) ;


load(sprintf('%sPI trends.mat',load_data_path)) ;
load(sprintf('%shist trends.mat',load_data_path)) ;
load('RAPID_trend.mat','duration','trend_cte','trend_var')

E = length(edges) ;


%% Get colourmap
cmap = cmocean('speed') ;
xq = flip(linspace(.2,.8,3)) ;
c_hist = NaN(3,3) ;
for i = 1:3
    c_hist(i,:) = interp2(linspace(0,1,256),1:3,cmap',xq(i),1:3) ;
end

%% Setup figure 
pdf_cmp_fig_hist = figure('Position',[-1600 400 965 350]) ;
plt = tiledlayout(1,2,'TileSpacing','compact',...
                      'Padding','none') ;


%% Variability of timeseries and trends
ax1 = nexttile(1) ; hold on

% load variables
sig_pi_path = sprintf('%s/AMOC Sig vs Length/',home) ;
sig_pd_path = sprintf('%s/AMOC Sig vs Length (Hist)/',home) ;
met_path = sprintf('%s/AMOC Timeseries Variation/',home) ;


sig_pi_struct = load(sprintf('%sVAC_model_VAC_rapid_sig_vs_length.mat',sig_pi_path)) ;
sig_pd_struct = load(sprintf('%sVAC_model_VAC_rapid_sig_vs_length.mat',sig_pd_path)) ;
load('RAPID_trend.mat','duration','trend_cte','var_inter') ; 

ma_pi = load('Metric Array PI.mat') ;
ma_pd = load('Metric Array PD.mat') ;

% Get standard deviation of each model's PD PDF
s14 = function_get_std_dev(models,sig_pd_struct,duration) ;

% Get model mean std dev of PI PDFs and monthly mean
s14_pi_mean = mean(function_get_std_dev(models,sig_pd_struct,duration)) ;
s14_pi_mm   = mean(ma_pi.metric_array(1:M,9)) ;

% Get correlation across models for each metric in PD
[r14,p14] = function_get_corr(ma_pd.metric_array,s14) ;

% Plot individual models
scatter(ma_pd.metric_array(1:M,9),s14,25,colours,'filled','HandleVisibility','off') ;

% Plot model means
scatter(mean(ma_pd.metric_array(1:M,9)),mean(s14),25,'k','filled','DisplayName','CMIP6 PD Mean')
scatter(s14_pi_mm,s14_pi_mean,25,'d','k','DisplayName','CMIP6 PI Mean')
    
% Plot CMIP5 value
cmip5 = load(strcat(home,'/CMIP5 Analysed Data/00_ALL_MODEL_analysis.mat')) ;
cmip5_14_year_point = mean(interp2(cmip5.trend_lengths_indep,1:17,...
                                    cmip5.model_std_of_PDFs,...
                                    round(duration*12)/12,1:17)) ;
cmip5_pt = [mean(cmip5.model_std_amoc) cmip5_14_year_point] ;
scatter(cmip5_pt(1),cmip5_pt(2),25,'k','DisplayName','CMIP5 PI mean') ;


% Plot Caesar value
load('Caesar_AMOC.mat')
std_caes = std(amoc) ;
trends14 = function_trend_id_pdf(t,dt,amoc,round(duration*12)) ;
std_caes_tnds = std(trends14.trends) ;
scatter(std_caes,std_caes_tnds,25,'k*',...
        'DisplayName','Caesar et al.')
    

% Plot RAPID x-value (std dev of timeseries)
plot(std(var_inter).*[1 1], [0 .3],...
     'k--','LineWidth',2,'DisplayName','RAPID observations') ;

% label representative models
text(ma_pd.metric_array(1,9)-0.02,s14(1)+.0015,'ACCESS-CM2 \rightarrow',...
     'HorizontalAlignment','right',...
     'VerticalAlignment','middle',...
     'FontSize',8,...
     'BackgroundColor','None',...
     'Margin',0.1)
 
text(ma_pd.metric_array(8,9)+0.03,s14(8)+.007,'CNRM-ESM2-1',...
     'HorizontalAlignment','left',...
     'VerticalAlignment','middle',...
     'FontSize',8,...
     'BackgroundColor','None',...
     'Margin',0.1)
 
text(ma_pd.metric_array(21,9)-0.03,s14(21)+.0015,'NorESM2-MM \rightarrow',...
     'HorizontalAlignment','right',...
     'VerticalAlignment','middle',...
     'FontSize',8,...
     'BackgroundColor','None',...
     'Margin',0.1)
 

% labelling
ylabel(sprintf('\\sigma(%.1f-year AMOC trend) [Sv yr^{-1}]',duration))
xlabel('\sigma(AMOC) [Sv]')
title('Monthly vs. 14.3-year trend variability')

% formatting
ylim([0 .3])
xlim([.5 2.6])

% legend
lg = legend('location','northwest','box','off') ;

% set panel lettering
text(.01,.99,'a)',...
        'FontSize',20,...
        'HorizontalAlignment','left',...
        'VerticalAlignment','top',...
        'Units','Normalized',...
        'Color','k')


%% histogram and distribution
ax2 = nexttile(2) ; hold on

tit_str = 'Observed, Simulated and Reconstructed Trends' ;
title(tit_str) ;
ylabel('Frequency Density')
xlabel('Trend [Sv yr^{-1}]')

% get standard deviation of PI distribution
% std_PI = std(mean(PI_arr_vac,1)) ;

% get bar centres
bx = movmean(edges,2,'EndPoints','discard') ;

% get mean of PI bin counts
M = size(PI_arr_vac,1) ;
N_PI = NaN(M,E-1) ;
for m = 1:M
    N_PI(m,:) = histcounts(PI_arr_vac(m,:),edges,...
        'normalization','pdf') ;
end
PI_counts = mean(N_PI,1) ;

% get mean of PD bin counts
M = size(hist_arr_vac,1) ;
N_PD = NaN(M,E-1) ;
for m = 1:M
    N_PD(m,:) = histcounts(hist_arr_vac(m,:),edges,...
        'normalization','pdf') ;
end
PD_counts = mean(N_PD,1) ;

% get PD bar colours
t_norm = 2*normalize(t_hist,'range')-1 ;
cmap = cmocean('balance') ; % white at mid-times

% go through each of the edges, find av time of segments in there
bar_colours = NaN(E-1,3,M) ;
labels = NaN(M,E-1) ;
for m = 1:M
    for i = 1:E-1 
        idcs = find(hist_arr_vac(m,:) > edges(i) & hist_arr_vac(m,:) <= edges(i+1)) ;
        mean_t = mean(t_norm(idcs),'omitnan') ;
        
        labels(m,i) = mean(t_hist(idcs),'omitnan') ;
        
        bar_colours(i,:,m) = interp2(linspace(-1,1,256),1:3,cmap',mean_t,1:3) ;
    end
end
labels = mean(labels,1,'omitnan') ;
bar_colours = mean(bar_colours,3,'omitnan') ;


b = bar(bx,PD_counts,...
    'FaceColor','flat',...
    'CData',bar_colours,...
    'FaceAlpha',0.8,...
    'HandleVisibility','off') ;
b.EdgeColor = 'None' ;


% plot the PI standard deviations (+/- 1 and 2)
yMax = max(caesar.distribution) ;
% for i = [-2 -1 1 2]
%     plot(i*std_PI.*[1 1], [0 yMax], 'k--','HandleVisibility','off') 
% end

% plot the mean of the fits
plot(interp(edges,5),mean(PI_fit_vac,1),'Color',c_hist(1,:),'LineWidth',2,'DisplayName','Model PI') ;
plot(interp(edges,5),mean(hist_fit_vac,1),'Color',c_hist(2,:),'LineWidth',2,'DisplayName','Model PD (1870 - 2014)') ;
plot(interp(edges,5),caesar.distribution,'Color',c_hist(3,:),'LineWidth',2,'DisplayName','Caesar et al. (1870 - 2014)') ;

% plot the observed RAPID trend
plot(trend_var.*[1 1], [0 yMax],'k-','LineWidth',2,'HandleVisibility','off') ;
text(trend_var, .85*max(yMax(:)),{'Observed','trend'},...
        'HorizontalAlignment','center',...
        'BackgroundColor',[1 1 1],...
        'Margin',0.001)
    
% direct label bars
y = 0.1*linspace(1,1,length(bx)) ;
s = strsplit(sprintf('%.0f,',labels),',') ; % cell array of years
s = s(1:end-1) ;

% only keep labels for sizeable bins
tol = 0.25 ;
s(PD_counts < tol) = {' '} ;

text(bx,y,s,'Rotation',90,'Color','k')

% formatting
ylim([0 1.05*yMax])
    
% set plot-specific labels
l = legend('location','northeast') ;
l.Box = 'off' ;

hold on

if DRAFT_FLAG % add watermark
    ax2.Units = 'pixels' ;
    ang = atand(ax2.Position(4)/ax2.Position(3)) ;
    
    t=text(0.5,0.5,'DRAFT',...
        'FontSize',60,...
        'HorizontalAlignment','center',...
        'VerticalAlignment','middle',...
        'Color',[.92 .92 .92],...
        'Rotation',ang,...
        'Units','Normalized') ;
end



% set panel lettering
text(.01,.99,'b)',...
        'FontSize',20,...
        'HorizontalAlignment','left',...
        'VerticalAlignment','top',...
        'Units','Normalized',...
        'Color','k')

%% Setup figure (PI histogram)
if PI_FLAG
    pdf_cmp_fig_pi = figure('Position',[-1600 400 675 426]) ;
    plt = tiledlayout('flow') ;

    % set title

    % set common labels
    for t = 1:1
        nexttile(t)
        hold on

        xlabel(sprintf('Trend of %g-year segment [Sv yr^{-1}]',round(duration,1)))
        ylabel('Frequency Density')
        ylim([0 6])
    end

    %% VAC histogram and distribution
    nexttile(1)
    hold on

for t = 1:1
    nexttile(t)
    hold on
    
    xlabel(sprintf('Trend of %g-year segment [Sv yr^{-1}]',round(duration,1)))
    ylabel('Frequency Density')
    ylim([0 6])
end

    tit_str = 'Observed and Simulated Trends in AMOC Strength at 26^oN (PI histogram)' ;
    title(tit_str) ;

    % get standard deviation of PI distribution
    % std_PI = std(mean(PI_arr_vac,1)) ;

    % get bar centres
    bx = movmean(edges,2,'EndPoints','discard') ;

    % get mean of PI bin counts
    M = size(PI_arr_vac,1) ;
    N_PI = NaN(M,E-1) ;
    for m = 1:M
        N_PI(m,:) = histcounts(PI_arr_vac(m,:),edges,...
            'normalization','pdf') ;
    end
    PI_counts = mean(N_PI,1) ;

    % get mean of PD bin counts
    M = size(PI_arr_vac,1) ;
    N_PD = NaN(M,E-1) ;
    for m = 1:M
        N_PD(m,:) = histcounts(PI_arr_vac(m,:),edges,...
            'normalization','pdf') ;
    end
    PD_counts = mean(N_PD,1) ;

    % get PD bar colours
    t_norm = 2*normalize(t_PI,'range')-1 ;
    cmap = cmocean('balance') ; % white at mid-times

    % go through each of the edges, find av time of segments in there
    bar_colours = NaN(E-1,3,M) ;
    for m = 1:M
        for i = 1:E-1 
            idcs = find(PI_arr_vac(m,:) > edges(i) & PI_arr_vac(m,:) <= edges(i+1)) ;
            mean_t = mean(t_norm(idcs)) ;
            bar_colours(i,:,m) = interp2(linspace(-1,1,256),1:3,cmap',mean_t,1:3) ;
        end
    end
    bar_colours = mean(bar_colours,3,'omitnan') ;

    b = bar(bx,PD_counts,...
        'FaceColor','flat',...
        'CData',bar_colours,...
        'FaceAlpha',0.8,...
        'HandleVisibility','off') ;
    b.EdgeColor = 'None' ;

    % plot the histograms
    % h1 = histogram(mean(PI_arr_vac,1),edges,'normalization','pdf','HandleVisibility','off') ;
    % h1.FaceAlpha = 0.4 ; % looks better a bit faded
    % histogram(hist_arr_vac,edges,'normalization','pdf') ;
    % histogram(caesar.trends,edges,'normalization','pdf') ;

    % plot the PI standard deviations (+/- 1 and 2)
    yMax = max(caesar.distribution) ;
    % for i = [-2 -1 1 2]
    %     plot(i*std_PI.*[1 1], [0 yMax], 'k--','HandleVisibility','off') 
    % end

    % plot the mean of the fits
    plot(interp(edges,5),mean(PI_fit_vac,1),'Color',c_hist(1,:),'LineWidth',2,'DisplayName','Model PI') ;
    plot(interp(edges,5),mean(hist_fit_vac,1),'Color',c_hist(2,:),'LineWidth',2,'DisplayName','Model PD (1870 - 2014)') ;
    plot(interp(edges,5),caesar.distribution,'Color',c_hist(3,:),'LineWidth',2,'DisplayName','Caesar et al. (1870 - 2014)') ;

    % plot the observed RAPID trend
    plot(trend_var.*[1 1], [0 yMax],'k-','LineWidth',2,'HandleVisibility','off') ;
    text(trend_var-0.025, .85*max(yMax(:)),{'Observed','trend'},...
            'HorizontalAlignment','right',...
            'Margin',0.001,...
            'BackgroundColor',[1 1 1])

    % formatting
    ylim([0 1.05*yMax])

    % set plot-specific labels
    l = legend('location','northeast') ;
    l.Box = 'off' ;
    
    savename = sprintf('%s/PDF Scenario Comparison (PI hist).png',save_sup_path) ;
    exportgraphics(pdf_cmp_fig_pi,savename) ;
    
end

%% CAC histogram and distribution
% nexttile(2)
% hold on
% 
% % plot the histograms
% histogram(PI_arr_cac,edges,'normalization','pdf') ;
% histogram(hist_arr_cac,edges,'normalization','pdf') ;
% 
% % plot the mean of the fits
% plot(edges,mean(PI_fit_cac,1),'b','LineWidth',2) ;
% plot(edges,mean(hist_fit_cac,1),'r','LineWidth',2) ;
% 
% % plot the observed RAPID trend
% plot(trend_cte.*[1 1], [0 5],'k-','LineWidth',2) ;
% 
% % set plot-specific labels
% title('Constant Annual Cycle')


%% Report differences (CAC vs VAC)
mean_PI_difference = mean(PI_arr_vac) - mean(PI_arr_cac) ;
mean_hist_difference = mean(hist_arr_vac) - mean(hist_arr_cac) ;

mean_PI_std = std(PI_arr_vac) - std(PI_arr_cac) ;
mean_hist_std = std(hist_arr_vac) - std(hist_arr_cac) ;

fprintf(1,'Mean PI Difference: %s\n',mean_PI_difference) ;
fprintf(1,'Mean historical Difference: %s\n',mean_hist_difference) ;
fprintf(1,'Std PI Difference: %s\n',mean_PI_std) ;
fprintf(1,'Std historical Difference: %s\n',mean_hist_std) ;

%% Save
if DRAFT_FLAG
   savename = sprintf('%s/DRAFT-PDF Scenario Comparison.png',save_sup_path) ;
else
    savename = sprintf('%s/PDF Scenario Comparison.png',save_sup_path) ;
end
exportgraphics(pdf_cmp_fig_hist,savename) ;

%% If DIFF_FLAG, plot model-by-model differences
if DIFF_FLAG
    % setup figure
    fig = figure() ;
    plt = tiledlayout(2,3) ;

    
    % plot model fits
    nexttile(1) ; plot(edges,PI_fit_cac) ; hold on % CAC
    nexttile(2) ; plot(edges,PI_fit_vac) ; hold on % VAC
    nexttile(3) ; plot(edges,PI_fit_diff) ; hold on % VAC - CAC
    nexttile(4) ; plot(edges,hist_fit_cac) ; hold on % CAC
    nexttile(5) ; plot(edges,hist_fit_vac) ; hold on % VAC
    nexttile(6) ; plot(edges,hist_fit_diff) ; hold on % VAC - CAC
    
    % format figure
    set_figure_dims(fig)
    title(plt,'Model-by-Model distributions of 14-year Trends in AMOC Strength')
    
    nexttile(1) ; 
    title('PI CAC') ; 
    xlabel('Trend [Sv yr^{-1}]')
    ylabel('PDF value')
    
    nexttile(2) ; 
    title('PI VAC') ; 
    xlabel('Trend [Sv yr^{-1}]')
    
    nexttile(3) ; 
    title('PI Difference') ; 
    xlabel('Trend [Sv yr^{-1}]')
    
    nexttile(4) ; 
    title('Hist CAC') ; 
    xlabel('Trend [Sv yr^{-1}]')
    ylabel('PDF value')
    
    nexttile(5) ; 
    title('Hist VAC') ; 
    xlabel('Trend [Sv yr^{-1}]')
    
    nexttile(6) ; 
    title('Hist Difference') ; 
    xlabel('Trend [Sv yr^{-1}]')
    
    set_figure_dims(fig)

    savename = sprintf('%s/PDF Scenario Comparison (model-by-model).png',save_fig_path) ;
    exportgraphics(fig,savename) ;

    
end



%% End Script
fprintf(1,'%s\nScript complete! \n\n',repmat('=',1,70)) ;


%% Functions
function std_devs = function_get_std_dev(models,sig_struct,duration)

    M = length(models) ;

    std_devs = NaN(M,1) ;

    for m = 1:M
        name = models{m} ;

        % get index in sig trend relating to this model
        s_idx = find(strcmp(sig_struct.models,name)) ;

        % if empty, skip
        if isempty(s_idx)
            continue
        end

        % get value of 1 std dev at 14.4 years, in Sv/yr
        sig = interp1(sig_struct.trend_lengths_indep,sig_struct.std_dev_of_PDFs(s_idx,:),duration) ;
        std_devs(m) = sig ;
    end

end


function [r,p] = function_get_corr(metric_array,std_devs,bad_idcs)
    
    T = size(metric_array,2) ;
    M = length(std_devs) ;
    
    if ~exist('bad_idcs','var')
        bad_idcs = zeros(M,1) ;
    end
    
    idcs = 1:M ;
    idcs = idcs(~bad_idcs) ;

    % Get correlation across models for each metric
    r = NaN(T,1) ;
    p = NaN(T,1) ;

    for ii = 1:T
        [rii,pii] = corrcoef(metric_array(idcs,ii),std_devs(idcs),'rows','complete') ;
        r(ii) = rii(2) ;
        p(ii) = pii(2) ;
    end
end
